<Page
    x:Class="Delete_Newline.Views.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:models="using:Delete_Newline.Models"
    xmlns:helpers="using:Delete_Newline.Helpers"
    xmlns:xaml="using:Microsoft.UI.Xaml"
    x:Uid="SettingsPage_Title">

    <ScrollViewer>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0"
                        MaxWidth="500">

                <Grid Padding="0,20,20,10">
                    <TextBlock x:Uid="Settings_StartOnTray"/>
                    <CheckBox HorizontalAlignment="Right" Style="{StaticResource Compact}"/>
                </Grid>

                <Line
                    X1="0" Y1="0" X2="1000" Y2="0"
                    Stroke="{ThemeResource DividerStrokeColorDefaultBrush}"
                    StrokeThickness="1"
                    Margin="0,10,0,10"/>

                <Grid Padding="0,0,20,10">
                    <TextBlock x:Uid="Settings_Theme"/>

                    <ComboBox Width="125"
                              x:Name="ThemeComboBox"
                              HorizontalAlignment="Right"
                              SelectedValue="{x:Bind ViewModel.SelectedTheme, Mode=TwoWay}"
                              SelectedValuePath="Tag">
                        <behaviors:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="SelectionChanged">
                                <core:InvokeCommandAction Command="{x:Bind ViewModel.SwitchThemeCommand}"
                                                          CommandParameter="{Binding SelectedValue, ElementName=ThemeComboBox}" />
                            </core:EventTriggerBehavior>
                        </behaviors:Interaction.Behaviors>
                        <ComboBoxItem x:Uid="Settings_Theme_Default" Tag="Default" />
                        <ComboBoxItem x:Uid="Settings_Theme_Light" Tag="Light" />
                        <ComboBoxItem x:Uid="Settings_Theme_Dark" Tag="Dark" />
                    </ComboBox>
                </Grid>

                <Grid Padding="0,0,20,10">
                    <TextBlock x:Uid="Settings_Language"/>

                    <ComboBox Width="125"
                              x:Name="LanguageComboBox"
                              HorizontalAlignment="Right"
                              ItemsSource="{x:Bind ViewModel.AvailableLanguages, Mode=OneWay}"
                              SelectedItem="{x:Bind ViewModel.SelectedLanguage, Mode=TwoWay}"
                              DisplayMemberPath="DisplayName">
                        <behaviors:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="SelectionChanged">
                                <core:InvokeCommandAction Command="{x:Bind ViewModel.SwitchLanguageCommand}"
                                                          CommandParameter="{Binding SelectedItem, ElementName=LanguageComboBox}" />
                            </core:EventTriggerBehavior>
                        </behaviors:Interaction.Behaviors>
                    </ComboBox>
                </Grid>

                <Grid Padding="0,0,20,10">
                    <TextBlock x:Uid="Settings_Notification"/>
                    <CheckBox x:Name="NotificationCheckBox"
                              IsChecked="{x:Bind ViewModel.EnableNotification}" 
                              HorizontalAlignment="Right" 
                              Style="{StaticResource Compact}">

                        <behaviors:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="Click">
                                <core:InvokeCommandAction Command="{x:Bind ViewModel.ToggleNotificationCommand}" 
                                      CommandParameter="{Binding IsChecked, ElementName=NotificationCheckBox}"/>
                            </core:EventTriggerBehavior>
                        </behaviors:Interaction.Behaviors>

                    </CheckBox>
                </Grid>

                <Grid Padding="0,0,20,10">
                    <TextBlock x:Uid="Settings_TopMost"/>
                    <CheckBox x:Name="TopMostCheckBox"
                              IsChecked="{x:Bind ViewModel.EnableTopMost}" 
                              HorizontalAlignment="Right" 
                              Style="{StaticResource Compact}">

                        <behaviors:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="Click">
                                <core:InvokeCommandAction Command="{x:Bind ViewModel.ToggleTopMostCommand}" 
                                      CommandParameter="{Binding IsChecked, ElementName=TopMostCheckBox}"/>
                            </core:EventTriggerBehavior>
                        </behaviors:Interaction.Behaviors>
                    </CheckBox>
                </Grid>
            </StackPanel>

            <TextBlock
                Text="Toast Message Test"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Foreground="Red" />

            <TextBlock Text="{x:Bind ViewModel.VersionDescription, Mode=OneWay}"
                   Style="{ThemeResource BodyTextBlockStyle}"
                   Grid.Row="1"     
                   HorizontalAlignment="Center"
                   VerticalAlignment="Bottom"
                   Margin="500,0,0,20"/>

        </Grid>
    </ScrollViewer>
</Page>